{"version":3,"sources":["components/spinner/spinner.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/list-item/list-item.js","components/list/index.js","components/list/list.js","services/swapi-service.js","components/app/index.js","components/app/app.js","index.js"],"names":["Spinner","react_default","a","createElement","className","ItemAddForm","state","label","onLabelChange","e","_this","setState","target","value","onSubmit","preventDefault","props","item","console","log","id","this","maxId","label1","type","onChange","placeholder","Component","TodoListItem","_ref","onDelete","components_item_add_form","onClick","TodoList","items","elements","onItemAdded","map","itemProps","Object","objectWithoutProperties","key","list_item_list_item","assign","SwapiService","url","fetch","res","ok","Error","concat","status","json","getResource","App","swapiService","newItems","idx","findIndex","toConsumableArray","slice","_this2","getAllAuthor","then","peopleList","index","components_list","spinner_spinner","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.64b82dd7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css\">\r\n      <div className=\"lds-double-ring\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n  state = {\r\n    label:  ''\r\n  };\r\n  \r\n  createItem(label) {\r\n    return {\r\n      id: ++this.maxId,\r\n      label\r\n    };\r\n  } \r\n  \r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.item.label = this.state.label;\r\n    console.log('vvv2',this.props.item);\r\n  };\r\n\r\n  render() {\r\n    const {label1} = this.props;\r\n    return (\r\n      <form\r\n        className=\"bottom-panel d-flex\"\r\n        onSubmit={this.onSubmit}>\r\n\r\n        <input type=\"text\"\r\n               className=\"form-control new-todo-label\"\r\n               onChange={this.onLabelChange}\r\n               placeholder={label1}\r\n               value={this.state.label} />\r\n               <button type=\"submit\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n              >Save</button>\r\n\r\n\r\n               \r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ItemAddForm from '../item-add-form';\r\nimport './list-item.css';\r\n\r\nconst TodoListItem = ({ label, onDelete, item, id }) => {\r\n\r\n  let classNames = 'todo-list-item';\r\n  \r\n  return (\r\n    <span className={classNames} >\r\n    <ItemAddForm label1 = {label}\r\n          item ={item}\r\n          id={id}\r\n           />\r\n      <span\r\n        className=\"todo-list-item-label\"\r\n     ></span>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n              onClick={onDelete}>\r\n        <i className=\"fa fa-trash-o\"></i>\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoList from './list';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport AuthorListItem from '../list-item/list-item';\r\n\r\nimport './list.css';\r\n\r\nconst AuthorList = ({ items, onDelete, onItemAdded }) => {\r\n  \r\n  const elements = items.map((item) => {\r\n   \r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <AuthorListItem\r\n          item = {item}\r\n          id={id}\r\n          { ...itemProps }\r\n          onDelete={ () => onDelete(id) }\r\n         />\r\n          </li>\r\n    );\r\n  });\r\n\r\n  return (<ul className=\"todo-list list-group\">{ elements }</ul>);\r\n};\r\n\r\nexport default AuthorList;\r\n","export default class SwapiService {\r\n\r\n  async getResource(url) {\r\n    const res = await fetch(` http://my-json-server.typicode.com/mate-academy/literary-blog/authors`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}` +\r\n        `, received ${res.status}`)\r\n    }\r\n    return await res.json();\r\n  }\r\n\r\n  async getAllAuthor() {\r\n    const res = await this.getResource();\r\n    return res;\r\n  }\r\n }\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport Spinner from \"../spinner/spinner\";\r\nimport AuthorList from '../list';\r\nimport SwapiService from \"../../services/swapi-service\"; \r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  \r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    newItems: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.swapiService\r\n      .getAllAuthor()\r\n      .then((peopleList) => {\r\n        let newItems = peopleList.map(function(item, index){\r\n          return { 'id':index, 'label':item, }});\r\n        this.setState({\r\n          newItems\r\n        });\r\n      });\r\n  } \r\n  \r\n  maxId = 100;\r\n\r\n  onDelete = (id) => {\r\n    \r\n    this.setState((state) => {\r\n      const idx = state.newItems.findIndex((item) => item.id === id);\r\n      const newItems = [\r\n        ...state.newItems.slice(0, idx),\r\n        ...state.newItems.slice(idx + 1)\r\n      ];\r\n      return { newItems };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { newItems} = this.state;\r\n    if (!newItems) {\r\n      return <Spinner />;\r\n    }\r\n     \r\n    return (\r\n      <div className=\"todo-app\"><h2>List of authors</h2>        \r\n        <AuthorList\r\n          items={ this.state.newItems }\r\n          onDelete={this.onDelete}\r\n          onItemAdded={this.onItemAdded} />\r\n\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root'));"],"sourceRoot":""}